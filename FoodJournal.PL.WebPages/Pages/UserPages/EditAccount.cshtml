@using FoodJournal.Dependences;
@using FoodJournal.BLL.Interfaces;

@{
    Layout = "~/Layouts/_Layout.cshtml";
    string id = Request.QueryString["ID"];
    string login = "";
    string password = "";
    double bodyWeight = 0;
    Goals goal = 0;
    string requestID = "";
    IAccountBLL accountBLL = DependencyResolver.AccountBLL;

    if (!IsPost)
    {
        var account = accountBLL.GetById(int.Parse(Request.QueryString["ID"]));
        requestID = account.ID.ToString();
        login = account.Login;
        password = account.Password;
        bodyWeight = account.BodyWeight;
        goal = account.Goal;
    }

    if (IsPost)
    {
        requestID = Request.Form["requestID"];
        login = Request.Form["Login"];
        password = Request.Form["Password"];
        bodyWeight = Double.Parse(Request.Form["BodyWeight"]);
        goal = (Goals)Enum.Parse(typeof(Goals), Request.Form["Goal"]);
        accountBLL.Edit(Int32.Parse(requestID), login, password, bodyWeight, goal);
        Response.Redirect("~");
    }
}

<form class="dialogPage" action="~/Pages/UserPages/EditAccount.cshtml" enctype="multipart/form-data" method="post">

    <div class="loginHead">Profile settings</div>
    
    <div>
        <label class="loginField">Login</label>
        <div>
            <input class="loginInput" id="charLogin" type="text" name="Login" minlength="4" maxlength="12" value=@login required>
        </div>
    </div>

    <div>
        <label class="loginField">Password</label>
        <div>
            <input class="loginInput" id="charPassword" type="password" name="Password" minlength="6" maxlength="12" value=@password required>
        </div>
    </div>

    <div>
        <label class="loginField">Body Weight</label>
        <div>
            <input class="loginInput" id="minValue" type="number" name="BodyWeight" min="0" value=@bodyWeight required>
        </div>
    </div>

    <div>
        <label class="loginField">Goal</label>
        <div>
            <select class="loginInput" name="Goal" size="1">

                @foreach (var item in Enum.GetNames(typeof(Goals)))
                {
                    if (item == goal.ToString())
                    {
                        <option value="@item" selected="selected">@item</option>
                    }
                         else
                    {
                      <option value = "@item" > @item </option >
                    }
                }

            </select>
        </div>
    </div>

    <div>
        <div>
            <input type="hidden" name="requestID" value="@requestID" />
            <button class="loginButton" onclick="validateMinValue(); validateLogin(); validatePassword();">Edit</button>
        </div>
    </div>

    <script type="text/javascript" src="~/JS/Validation.js"></script>

</form>