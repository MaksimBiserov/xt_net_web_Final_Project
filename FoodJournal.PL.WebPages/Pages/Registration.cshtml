@using FoodJournal.Dependences;
@using FoodJournal.BLL.Interfaces;

@{
    Layout = "~/Layouts/_Layout.cshtml";
    string errorMessage = null;
    IAccountBLL registrationUser = DependencyResolver.AccountBLL;
    string login = Request["Login"];
    string password = Request["Password"];
    double bodyWeight;
    if(!Double.TryParse(Request["BodyWeight"], out bodyWeight)) { };
    string goal = Request["Goal"];
}

@if (errorMessage != null)
{
    <div id="modalVisible">
        @errorMessage
        <a href="~/Pages/SignIn.cshtml" class="close">Close</a>
    </div>
}

@if (IsPost)
{
    if (!string.IsNullOrWhiteSpace(login) && !string.IsNullOrWhiteSpace(password))
    {
        registrationUser.AddRole(new FoodJournal.Entities.Account
        {
            Login = login,
            Password = password,
            Role = new string[] { "User" },
            BodyWeight = bodyWeight,
            Goal = (Goals)Enum.Parse(typeof(Goals), goal, true)
        });

        FormsAuthentication.SetAuthCookie(login, createPersistentCookie: true);
        Response.Redirect("~");
    }

    else
    {
        errorMessage = "Enter your registration details";
    }
}

<div class="crudContainer">
    <form action="~/Pages/Registration.cshtml" method="post">
        <div>
            <p class="loginHead">Registration</p>
        </div>

        <div>
            <label class="loginHead">Login</label>
            <div>
                <input class="loginInput" type="text" name="Login" value=@login required>
            </div>
        </div>

        <div>
            <label class="loginHead">Password</label>
            <div>
                <input class="loginInput" type="password" name="Password" value=@password required>
            </div>
        </div>

        <div>
            <label class="loginHead">Body Weight</label>
            <div>
                <input class="loginInput" type="text" name="BodyWeight" value=@bodyWeight required>
            </div>
        </div>

        <div>
            <label class="loginHead">Goal</label>
            <div>
                <select class="loginInput" name="Goal" size="1">

                    @foreach (var item in Enum.GetNames(typeof(Goals)))
                    {
                        <option value="@goal">@item</option>
                    }

                </select>
            </div>
        </div>

        <div>
            <div>
                <button class="loginButton">Registration</button>
            </div>
        </div>
    </form>
</div>